<Application x:Class="PathDataDisplayer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:linq="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
             xmlns:local="clr-namespace:PathDataDisplayer"
             StartupUri="MainWindow.xaml"
             >
    <Application.Resources>

        <!--  Converters  -->
        <local:StringToPathGeometryConverter x:Key="StringToPathGeometryConverter" />
        <local:XElementToAttributyKeyConverter x:Key="XElementToAttributyKeyConverter" />

        <!--  Styles  -->
        <Style x:Key="Private.Path.Style" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="Blue" />
            <Setter Property="Stroke" Value="Blue" />
            <Setter Property="Stretch" Value="Fill" />
        </Style>

        <Style x:Key="Private.Paths.ItemContainerStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="4,1" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Margin" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          ContentTemplate="{DynamicResource Private.Paths.ItemTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Public.Paths.ListBox" TargetType="{x:Type ListBox}">
            <Setter Property="ItemsSource" Value="{Binding Paths}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource Private.Paths.ItemContainerStyle}" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Templates  -->
        <DataTemplate x:Key="Private.Paths.ItemTemplate" DataType="{x:Type linq:XElement}">
            <Button Command="{x:Static local:Commands.CopyCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd"
                                Height="Auto"
                                Width="Auto"
                                Background="Transparent"
                                BorderBrush="DarkGray"
                                BorderThickness="0.5"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"
                                ToolTip="{Binding Converter={StaticResource XElementToAttributyKeyConverter}}"
                                >
                            <Border.RenderTransform>
                                <ScaleTransform />
                            </Border.RenderTransform>

                            <ContentPresenter />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform CenterX="0.5"
                                                        CenterY="0.5"
                                                        ScaleX="1.5"
                                                        ScaleY="1.5"
                                                        />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>

                <Path Height="30"
                      Width="30"
                      Data="{Binding Value,
                                     Converter={StaticResource StringToPathGeometryConverter}}"
                      Stretch="Uniform"
                      Style="{StaticResource Private.Path.Style}"
                      />
            </Button>
        </DataTemplate>

    </Application.Resources>
</Application>
